{"ast":null,"code":"import _defineProperty from \"/Users/nicolas/Documents/web/react/rick-and-morty-app/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/nicolas/Documents/web/react/rick-and-morty-app/src/pages/_app.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { connect } from 'react-redux';\nimport { Provider } from 'react-redux';\nimport store from '../redux/store';\n\nconst MyApp = ({\n  Component,\n  pageProps\n}) => {\n  return /*#__PURE__*/_jsxDEV(Provider, {\n    store: store,\n    children: /*#__PURE__*/_jsxDEV(Component, _objectSpread({}, pageProps), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 9\n  }, this);\n};\n\n_c = MyApp;\n\nconst mapStateToProps = state => {\n  return {\n    characterReducer: state.characterReducer\n  };\n};\n\nexport default connect(mapStateToProps)(App);\n\nvar _c;\n\n$RefreshReg$(_c, \"MyApp\");","map":{"version":3,"sources":["/Users/nicolas/Documents/web/react/rick-and-morty-app/src/pages/_app.js"],"names":["connect","Provider","store","MyApp","Component","pageProps","mapStateToProps","state","characterReducer","App"],"mappings":";;;;;;;;AAAA,SAASA,OAAT,QAAwB,aAAxB;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,OAAOC,KAAP,MAAkB,gBAAlB;;AAEA,MAAMC,KAAK,GAAG,CAAC;AAAEC,EAAAA,SAAF;AAAaC,EAAAA;AAAb,CAAD,KAA8B;AAExC,sBAEI,QAAC,QAAD;AAAU,IAAA,KAAK,EAAEH,KAAjB;AAAA,2BACI,QAAC,SAAD,oBAAeG,SAAf;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UAFJ;AAQH,CAVD;;KAAMF,K;;AAYN,MAAMG,eAAe,GAAIC,KAAD,IAAW;AAE/B,SAAO;AACHC,IAAAA,gBAAgB,EAAED,KAAK,CAACC;AADrB,GAAP;AAIH,CAND;;AAQA,eAAeR,OAAO,CAACM,eAAD,CAAP,CAAyBG,GAAzB,CAAf","sourcesContent":["import { connect } from 'react-redux';\nimport { Provider } from 'react-redux'; \nimport store from '../redux/store';   \n\nconst MyApp = ({ Component, pageProps }) => {\n\n    return ( \n\n        <Provider store={store}>  \n            <Component {...pageProps} />\n        </Provider>  \n\n    )\n\n}\n\nconst mapStateToProps = (state) => {\n\n    return {\n        characterReducer: state.characterReducer\n    }\n\n}\n\nexport default connect(mapStateToProps)(App); \n"]},"metadata":{},"sourceType":"module"}