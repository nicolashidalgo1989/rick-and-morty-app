{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { SEARCH_CHARACTER, SEARCH_SUCCESS, SEARCH_ERROR } from '../consts/actionTypes';\nconst initialState = {\n  loading: false,\n  characters: [],\n  error: ''\n};\n\nconst characterReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case SEARCH_CHARACTER:\n      {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          loading: true\n        });\n      }\n\n    case SEARCH_SUCCESS:\n      {\n        return {\n          loading: false,\n          characters: action.payload,\n          error: ''\n        };\n      }\n\n    case SEARCH_ERROR:\n      {\n        return {\n          loading: false,\n          characters: [],\n          error: action.payload\n        };\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport default characterReducer;","map":{"version":3,"sources":["/Users/nicolas/Documents/web/react/rick-and-morty-app/src/redux/reducers.js"],"names":["SEARCH_CHARACTER","SEARCH_SUCCESS","SEARCH_ERROR","initialState","loading","characters","error","characterReducer","state","action","type","payload"],"mappings":";;;;;;AAAA,SAAQA,gBAAR,EAA0BC,cAA1B,EAA0CC,YAA1C,QAA8D,uBAA9D;AAEA,MAAMC,YAAY,GAAG;AAAEC,EAAAA,OAAO,EAAE,KAAX;AAAkBC,EAAAA,UAAU,EAAE,EAA9B;AAAkCC,EAAAA,KAAK,EAAE;AAAzC,CAArB;;AAEA,MAAMC,gBAAgB,GAAG,CAAEC,KAAK,GAAGL,YAAV,EAAwBM,MAAxB,KAAoC;AAEzD,UAAOA,MAAM,CAACC,IAAd;AAEI,SAAKV,gBAAL;AAAwB;AACpB,+CACOQ,KADP;AAEIJ,UAAAA,OAAO,EAAE;AAFb;AAIH;;AAED,SAAKH,cAAL;AAAsB;AAClB,eAAO;AACHG,UAAAA,OAAO,EAAE,KADN;AAEHC,UAAAA,UAAU,EAAEI,MAAM,CAACE,OAFhB;AAGHL,UAAAA,KAAK,EAAE;AAHJ,SAAP;AAKH;;AAED,SAAKJ,YAAL;AAAoB;AAChB,eAAO;AACHE,UAAAA,OAAO,EAAE,KADN;AAEHC,UAAAA,UAAU,EAAE,EAFT;AAGHC,UAAAA,KAAK,EAAEG,MAAM,CAACE;AAHX,SAAP;AAKH;;AAED;AAAS,aAAOH,KAAP;AAzBb;AA6BH,CA/BD;;AAiCA,eAAeD,gBAAf","sourcesContent":["import {SEARCH_CHARACTER, SEARCH_SUCCESS, SEARCH_ERROR } from '../consts/actionTypes'; \n\nconst initialState = { loading: false, characters: [], error: '' };\n\nconst characterReducer = ( state = initialState, action ) => {\n\n    switch(action.type){\n\n        case SEARCH_CHARACTER : {\n            return {\n                ...state,\n                loading: true\n            }\n        }\n\n        case SEARCH_SUCCESS : {\n            return { \n                loading: false,\n                characters: action.payload,\n                error: ''\n            }\n        }\n\n        case SEARCH_ERROR : {\n            return { \n                loading: false,\n                characters: [],\n                error: action.payload\n            }\n        }\n\n        default: return state;\n\n    }\n\n}\n\nexport default characterReducer;\n"]},"metadata":{},"sourceType":"module"}