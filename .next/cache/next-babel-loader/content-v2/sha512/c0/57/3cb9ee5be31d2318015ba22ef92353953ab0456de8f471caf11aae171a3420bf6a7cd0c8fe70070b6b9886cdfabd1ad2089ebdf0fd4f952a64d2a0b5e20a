{"ast":null,"code":"import _defineProperty from \"/Users/nicolas/Documents/web/react/rick-and-morty-app/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { SEARCH_CHARACTER } from '../consts/actionTypes';\nconst initialState = {\n  list: []\n};\n\nconst characterReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case SEARCH_CHARACTER:\n      {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          list: action.payload\n        });\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport default characterReducer;","map":{"version":3,"sources":["/Users/nicolas/Documents/web/react/rick-and-morty-app/src/redux/reducers.js"],"names":["SEARCH_CHARACTER","initialState","list","characterReducer","state","action","type","payload"],"mappings":";;;;;;AAAA,SAAQA,gBAAR,QAA+B,uBAA/B;AAEA,MAAMC,YAAY,GAAG;AAAEC,EAAAA,IAAI,EAAG;AAAT,CAArB;;AAEA,MAAMC,gBAAgB,GAAG,CAAEC,KAAK,GAAGH,YAAV,EAAwBI,MAAxB,KAAoC;AAEzD,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKN,gBAAL;AAAwB;AACpB,+CACOI,KADP;AAEIF,UAAAA,IAAI,EAAEG,MAAM,CAACE;AAFjB;AAIH;;AACD;AAAS,aAAOH,KAAP;AAPb;AAUH,CAZD;;AAcA,eAAeD,gBAAf","sourcesContent":["import {SEARCH_CHARACTER} from '../consts/actionTypes'; \n\nconst initialState = { list : [] };\n\nconst characterReducer = ( state = initialState, action ) => {\n\n    switch(action.type){\n        case SEARCH_CHARACTER : {\n            return {\n                ...state,\n                list: action.payload\n            }\n        }\n        default: return state;\n    }\n\n}\n\nexport default characterReducer;\n"]},"metadata":{},"sourceType":"module"}