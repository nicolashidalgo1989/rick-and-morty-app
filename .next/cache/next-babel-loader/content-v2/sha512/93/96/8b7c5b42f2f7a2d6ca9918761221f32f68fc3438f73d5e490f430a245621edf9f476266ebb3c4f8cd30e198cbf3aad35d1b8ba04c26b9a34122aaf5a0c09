{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/nicolas/Documents/web/react/rick-and-morty-app/src/components/List.js\";\nimport Card from './Card';\nimport { useSelector } from 'react-redux';\n\nconst List = () => {\n  const search = useSelector(state => state.characterReducer);\n  const {\n    loading,\n    character,\n    error\n  } = search;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"mb-3\",\n      children: \"Result\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"text-primary\",\n      children: \"Searching...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 26\n    }, this), character.length >= 1 && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: character\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 18\n      }, this)\n    }, void 0, false) // character.map( (char, i) => {\n    //     <>\n    //         <h3>char</h3>\n    //         <Card key={char.id} name={ char.name } image={ char.image } species={ char.species } type={ char.type} /> \n    //     </>\n    // })\n    , error !== '' && /*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"text-danger\",\n      children: search.error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 32\n    }, this)]\n  }, void 0, true);\n};\n\nexport default List;","map":{"version":3,"sources":["/Users/nicolas/Documents/web/react/rick-and-morty-app/src/components/List.js"],"names":["Card","useSelector","List","search","state","characterReducer","loading","character","error","length"],"mappings":";;;AAAA,OAAOA,IAAP,MAAiB,QAAjB;AACA,SAASC,WAAT,QAA4B,aAA5B;;AAEA,MAAMC,IAAI,GAAG,MAAM;AAEf,QAAMC,MAAM,GAAGF,WAAW,CAAGG,KAAD,IAAWA,KAAK,CAACC,gBAAnB,CAA1B;AAEA,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,SAAX;AAAsBC,IAAAA;AAAtB,MAAgCL,MAAtC;AAEA,sBAGI;AAAA,4BAEI;AAAI,MAAA,SAAS,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,EAIMG,OAAO,iBAAI;AAAI,MAAA,SAAS,EAAC,cAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJjB,EAMMC,SAAS,CAACE,MAAV,IAAoB,CAApB,iBAEE;AAAA,6BACC;AAAA,kBAAIF;AAAJ;AAAA;AAAA;AAAA;AAAA;AADD,qBAFF,CAME;AAEA;AACA;AACA;AACA;AAEA;AAnBR,MAuBMC,KAAK,KAAK,EAAV,iBAAiB;AAAI,MAAA,SAAS,EAAC,aAAd;AAAA,gBAA6BL,MAAM,CAACK;AAApC;AAAA;AAAA;AAAA;AAAA,YAvBvB;AAAA,kBAHJ;AAgCH,CAtCD;;AAwCA,eAAeN,IAAf","sourcesContent":["import Card from './Card';  \nimport { useSelector } from 'react-redux';\n\nconst List = () => {\n\n    const search = useSelector( (state) => state.characterReducer ); \n\n    const { loading, character, error } = search;\n\n    return (\n\n\n        <> \n            \n            <h2 className=\"mb-3\">Result</h2> \n\n            { loading && <h3 className=\"text-primary\">Searching...</h3> }\n\n            { character.length >= 1 && (\n                \n                <>\n                 <p>{character}</p>\n                </>\n                \n                // character.map( (char, i) => {\n\n                //     <>\n                //         <h3>char</h3>\n                //         <Card key={char.id} name={ char.name } image={ char.image } species={ char.species } type={ char.type} /> \n                //     </>\n \n                // })\n\n            )}\n \n            { error !== '' &&  <h3 className=\"text-danger\">{search.error}</h3> }\n            \n        </>\n\n    )\n\n}\n \nexport default List;\n"]},"metadata":{},"sourceType":"module"}